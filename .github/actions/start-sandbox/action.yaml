name: 'Start Colony Sandbox'
description: 'Starts a sandbox in Colony and returns its ID'
author: 'Quali'
inputs:
  space:
    description: 'Colony space'
    required: false
  blueprint_name:
    description: 'Name of Blueprint'
    required: false
  sandbox_name:
    description: 'Colony Sandbox Name'
    required: false
  colony_token:
    description: 'Colony longterm token'
    required: true

outputs:
  sandbox_id:
    description: 'The ID of launched Colony Sandbox'
    value: ${{ steps.start-sandbox.outputs.sandbox-id }}

runs:
  using: "composite"
  steps:
    - id: start-sandbox
      # run: .github/actions/start-sandbox/start-sb.sh
      # run: ${{ github.action_path }}/start-sb.sh
      run: |
        PAYLOAD=(
          "{
            'sandbox_name':'${{ inputs.sandbox_name }}',
            'blueprint_name':'${{ inputs.blueprint_name }}',
            'automation': true
          }"
        )

        sb=`curl --silent -X POST https://cloudshellcolony.com/api/spaces/${{ inputs.space }}" \
               -H "accept: text/plain" -H "Authorization: bearer ${{ inputs.colony_token }}" \
               -H "Content-Type:  application/json" -d "$PAYLOAD"` || exit 1
        
        sb=`echo $sb | sed 's/.*:"//' | sed 's/".*//'`
        echo "Sandbox with id $sb has been started"
        
        echo "::set-output name=sandbox-id::$(echo $sb)"
      shell: bash
    - id: wait-sandbox
      # run: .github/actions/start-sandbox/wait-sb.sh
      # run: ${{ github.action_path }}/wait-sb.sh
      run: |
        WAIT=`echo $((1 + $RANDOM % 15))`
        sleep $WAIT
        echo "Sandbox ID is ${SANDBOX_ID}"
      env:
        SANDBOX_ID: ${{ steps.start-sandbox.outputs.sandbox-id }}
      shell: bash
